version: '3.8'

services:
  sentiplay:
    image: python:3.9-slim
    container_name: sentiplay-app
    restart: unless-stopped
    ports:
      - "8080:5000"
    volumes:
      - sentiplay_data:/app/data
      - sentiplay_code:/app
    working_dir: /app
    environment:
      - FLASK_ENV=production
      - PYTHONPATH=/app
      - TZ=Asia/Jakarta
    command: >
      bash -c "
        echo 'Installing system dependencies...' &&
        apt-get update && apt-get install -y git gcc g++ curl build-essential &&
        if [ ! -f /app/app.py ]; then
          echo 'Cloning repository...'
          git clone https://github.com/danprat/sentiplay.git /tmp/sentiplay &&
          cp -r /tmp/sentiplay/* /app/ &&
          rm -rf /tmp/sentiplay
        fi &&
        echo 'Installing Python dependencies...' &&
        pip install --no-cache-dir --force-reinstall numpy==1.24.3 &&
        pip install --no-cache-dir --force-reinstall -r requirements.txt --no-deps &&
        pip install --no-cache-dir -r requirements.txt &&
        echo 'Initializing database...' &&
        python -c 'from database import DatabaseManager; DatabaseManager()' &&
        echo 'Starting SentiPlay application...' &&
        python app.py --host=0.0.0.0 --port=5000
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  nginx:
    image: nginx:alpine
    container_name: sentiplay-nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - nginx_config:/etc/nginx/conf.d
      - nginx_cache:/var/cache/nginx
      - nginx_logs:/var/log/nginx
    depends_on:
      - sentiplay
    environment:
      - TZ=Asia/Jakarta
    command: >
      sh -c "
        echo 'Creating nginx config...' &&
        cat > /etc/nginx/conf.d/default.conf << 'EOF'
        upstream sentiplay_backend {
            server sentiplay:5000;
        }
        server {
            listen 80;
            server_name _;
            client_max_body_size 50M;
            
            location /health {
                return 200 'nginx healthy';
                add_header Content-Type text/plain;
            }
            
            location / {
                proxy_pass http://sentiplay_backend;
                proxy_set_header Host \$$host;
                proxy_set_header X-Real-IP \$$remote_addr;
                proxy_set_header X-Forwarded-For \$$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto \$$scheme;
                proxy_connect_timeout 300s;
                proxy_send_timeout 300s;
                proxy_read_timeout 300s;
            }
        }
        EOF &&
        echo 'Starting nginx...' &&
        nginx -g 'daemon off;'
      "

volumes:
  sentiplay_data:
    driver: local
  sentiplay_code:
    driver: local
  nginx_config:
    driver: local
  nginx_cache:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    name: sentiplay_network
    driver: bridge
